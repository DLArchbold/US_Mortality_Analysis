ditch_the_axes
#output + scale_fill_gradient(trans = "log10")
output
maxd <- max(td$Deaths)
output2 <- output +
scale_fill_gradientn(colours = rev(rainbow(7)),
limits = c(min(td$Deaths), maxd),
#breaks = c(0, maxd*0.2, maxd*0.4, maxd*0.6, maxd*0.8, maxd) ,
)
output2
output3 <- output + scale_fill_gradient(limits = c(min(td$Deaths), maxd))
output3
#combine all region
td<-subset(datas, Cause.Name != "All causes")
td <- aggregate(x= td$Deaths, by=list(td$State),
FUN=sum)
colnames(td) = c("region", "Deaths")
td$region <- tolower(td$region)
#to remove united states deaths count
td<-subset(td, region != "united states")
td # total deaths dataset grouped by region w/o total United States death count
#import usa map data
states <- map_data("state")
states #usa map data
#Join states and td according to the "region" column
tdpoly <- inner_join(states, td, by = "region")
tdpoly
#make usa ggplot map
usa <- ggplot(data = states, mapping = aes(x = long, y = lat, group = group)) +
coord_fixed(1.3) +
geom_polygon(color = "black", fill = NA) #Fill is not mapped to anything (could be mapped to each states/regions eg: California and New York), and state lines are black (could be any other color)
usa
# get the state border back on top
usa <- usa +
theme_nothing()  #remove axes and gray background
usa
#idk
ditch_the_axes <- theme(
axis.text = element_blank(),
axis.line = element_blank(),
axis.ticks = element_blank(),
panel.border = element_blank(),
panel.grid = element_blank(),
axis.title = element_blank()
)
# With correct mercator projection
output <- usa +
geom_polygon(data = tdpoly, aes(fill = Deaths), color = "red") +
geom_polygon(color = "white", fill = NA) +
ditch_the_axes
#output + scale_fill_gradient(trans = "log10")
output
maxd <- max(td$Deaths)
output2 <- output +
scale_fill_gradientn(colours = rev(rainbow(7)),
limits = c(min(td$Deaths), maxd),
#breaks = c(0, maxd*0.2, maxd*0.4, maxd*0.6, maxd*0.8, maxd) ,
)
output2
output3 <- output + scale_fill_gradient(limits = c(min(td$Deaths), maxd))
output3
#combine all region
td<-subset(datas, Cause.Name != "All causes")
td <- aggregate(x= td$Deaths, by=list(td$State),
FUN=sum)
colnames(td) = c("region", "Deaths")
td$region <- tolower(td$region)
#to remove united states deaths count
td<-subset(td, region != "united states")
td # total deaths dataset grouped by region w/o total United States death count
#import usa map data
states <- map_data("state")
states #usa map data
#Join states and td according to the "region" column
tdpoly <- inner_join(states, td, by = "region")
tdpoly
#make usa ggplot map
usa <- ggplot(data = states, mapping = aes(x = long, y = lat, group = group)) +
coord_fixed(1.3) +
geom_polygon(color = "black", fill = NA) #Fill is not mapped to anything (could be mapped to each states/regions eg: California and New York), and state lines are black (could be any other color)
usa
# get the state border back on top
usa <- usa +
theme_nothing()  #remove axes and gray background
usa
#idk
ditch_the_axes <- theme(
axis.text = element_blank(),
axis.line = element_blank(),
axis.ticks = element_blank(),
panel.border = element_blank(),
panel.grid = element_blank(),
axis.title = element_blank()
)
# With correct mercator projection
output <- usa +
geom_polygon(data = tdpoly, aes(fill = Deaths), color = "red") +
geom_polygon(color = "white", fill = NA)
#output + scale_fill_gradient(trans = "log10")
output
maxd <- max(td$Deaths)
output2 <- output +
scale_fill_gradientn(colours = rev(rainbow(7)),
limits = c(min(td$Deaths), maxd),
#breaks = c(0, maxd*0.2, maxd*0.4, maxd*0.6, maxd*0.8, maxd) ,
)
output2
output3 <- output + scale_fill_gradient(limits = c(min(td$Deaths), maxd))
output3
#combine all region
td<-subset(datas, Cause.Name != "All causes")
td <- aggregate(x= td$Deaths, by=list(td$State),
FUN=sum)
colnames(td) = c("region", "Deaths")
td$region <- tolower(td$region)
#to remove united states deaths count
td<-subset(td, region != "united states")
td # total deaths dataset grouped by region w/o total United States death count
#import usa map data
states <- map_data("state")
states #usa map data
#Join states and td according to the "region" column
tdpoly <- inner_join(states, td, by = "region")
tdpoly
#make usa ggplot map
usa <- ggplot(data = states, mapping = aes(x = long, y = lat, group = group)) +
coord_fixed(1.3) +
geom_polygon(color = "black", fill = NA) #Fill is not mapped to anything (could be mapped to each states/regions eg: California and New York), and state lines are black (could be any other color)
usa
# get the state border back on top
# usa <- usa +
#   theme_nothing()  #remove axes and gray background
usa
#idk
ditch_the_axes <- theme(
axis.text = element_blank(),
axis.line = element_blank(),
axis.ticks = element_blank(),
panel.border = element_blank(),
panel.grid = element_blank(),
axis.title = element_blank()
)
# With correct mercator projection
output <- usa +
geom_polygon(data = tdpoly, aes(fill = Deaths), color = "red") +
geom_polygon(color = "white", fill = NA) +
ditch_the_axes
#output + scale_fill_gradient(trans = "log10")
output
maxd <- max(td$Deaths)
output2 <- output +
scale_fill_gradientn(colours = rev(rainbow(7)),
limits = c(min(td$Deaths), maxd),
#breaks = c(0, maxd*0.2, maxd*0.4, maxd*0.6, maxd*0.8, maxd) ,
)
output2
output3 <- output + scale_fill_gradient(limits = c(min(td$Deaths), maxd))
output3
#combine all region
td<-subset(datas, Cause.Name != "All causes")
td <- aggregate(x= td$Deaths, by=list(td$State),
FUN=sum)
colnames(td) = c("region", "Deaths")
td$region <- tolower(td$region)
#to remove united states deaths count
td<-subset(td, region != "united states")
td # total deaths dataset grouped by region w/o total United States death count
#import usa map data
states <- map_data("state")
states #usa map data
#Join states and td according to the "region" column
tdpoly <- inner_join(states, td, by = "region")
tdpoly
#make usa ggplot map
usa <- ggplot(data = states, mapping = aes(x = long, y = lat, group = group)) +
coord_fixed(1.3) +
geom_polygon(color = "black", fill = NA) #Fill is not mapped to anything (could be mapped to each states/regions eg: California and New York), and state lines are black (could be any other color)
usa
# get the state border back on top
usa <- usa +
theme_nothing()  #remove axes and gray background
usa
#idk
ditch_the_axes <- theme(
axis.text = element_blank(),
axis.line = element_blank(),
axis.ticks = element_blank(),
panel.border = element_blank(),
panel.grid = element_blank(),
axis.title = element_blank()
)
# With correct mercator projection
output <- usa +
geom_polygon(data = tdpoly, aes(fill = Deaths), color = "red") +
geom_polygon(color = "white", fill = NA) +
ditch_the_axes
#output + scale_fill_gradient(trans = "log10")
output
maxd <- max(td$Deaths)
output2 <- output +
scale_fill_gradientn(colours = rev(rainbow(7)),
limits = c(min(td$Deaths), maxd),
#breaks = c(0, maxd*0.2, maxd*0.4, maxd*0.6, maxd*0.8, maxd) ,
)
output2
output3 <- output + scale_fill_gradient(limits = c(min(td$Deaths), maxd))
output3
#combine all region
td<-subset(datas, Cause.Name != "All causes")
td <- aggregate(x= td$Deaths, by=list(td$State),
FUN=sum)
colnames(td) = c("region", "Deaths")
td$region <- tolower(td$region)
#to remove united states deaths count
td<-subset(td, region != "united states")
td # total deaths dataset grouped by region w/o total United States death count
#import usa map data
states <- map_data("state")
states #usa map data
#Join states and td according to the "region" column
tdpoly <- inner_join(states, td, by = "region")
tdpoly
#make usa ggplot map
usa <- ggplot(data = states, mapping = aes(x = long, y = lat, group = group)) +
coord_fixed(1.3) +
geom_polygon(color = "black", fill = NA) #Fill is not mapped to anything (could be mapped to each states/regions eg: California and New York), and state lines are black (could be any other color)
usa
# get the state border back on top
# usa <- usa +
#   theme_nothing()  #remove axes and gray background
# usa
#idk
ditch_the_axes <- theme(
axis.text = element_blank(),
axis.line = element_blank(),
axis.ticks = element_blank(),
panel.border = element_blank(),
panel.grid = element_blank(),
axis.title = element_blank()
)
# With correct mercator projection
output <- usa +
geom_polygon(data = tdpoly, aes(fill = Deaths), color = "red") +
geom_polygon(color = "white", fill = NA) +
ditch_the_axes
#output + scale_fill_gradient(trans = "log10")
output
maxd <- max(td$Deaths)
output2 <- output +
scale_fill_gradientn(colours = rev(rainbow(7)),
limits = c(min(td$Deaths), maxd),
#breaks = c(0, maxd*0.2, maxd*0.4, maxd*0.6, maxd*0.8, maxd) ,
)
output2
output3 <- output + scale_fill_gradient(limits = c(min(td$Deaths), maxd))
output3
usa+ditch
#combine all region
td<-subset(datas, Cause.Name != "All causes")
td <- aggregate(x= td$Deaths, by=list(td$State),
FUN=sum)
colnames(td) = c("region", "Deaths")
td$region <- tolower(td$region)
#to remove united states deaths count
td<-subset(td, region != "united states")
td # total deaths dataset grouped by region w/o total United States death count
#import usa map data
states <- map_data("state")
states #usa map data
#Join states and td according to the "region" column
tdpoly <- inner_join(states, td, by = "region")
tdpoly
#make usa ggplot map
usa <- ggplot(data = states, mapping = aes(x = long, y = lat, group = group)) +
coord_fixed(1.3) +
geom_polygon(color = "black", fill = NA) #Fill is not mapped to anything (could be mapped to each states/regions eg: California and New York), and state lines are black (could be any other color)
usa
# get the state border back on top
# usa <- usa +
#   theme_nothing()  #remove axes and gray background
# usa
#Remove axes without removing legend
ditch_the_axes <- theme(
axis.text = element_blank(),
axis.line = element_blank(),
axis.ticks = element_blank(),
panel.border = element_blank(),
panel.grid = element_blank(),
axis.title = element_blank()
)
usa+ditch_the_axes
# With correct mercator projection
output <- usa +
geom_polygon(data = tdpoly, aes(fill = Deaths), color = "red") +
geom_polygon(color = "white", fill = NA) +
ditch_the_axes
#output + scale_fill_gradient(trans = "log10")
output
maxd <- max(td$Deaths)
output2 <- output +
scale_fill_gradientn(colours = rev(rainbow(7)),
limits = c(min(td$Deaths), maxd),
#breaks = c(0, maxd*0.2, maxd*0.4, maxd*0.6, maxd*0.8, maxd) ,
)
output2
output3 <- output + scale_fill_gradient(limits = c(min(td$Deaths), maxd))
output3
#combine all region
td<-subset(datas, Cause.Name != "All causes")
td <- aggregate(x= td$Deaths, by=list(td$State),
FUN=sum)
colnames(td) = c("region", "Deaths")
td$region <- tolower(td$region)
#to remove united states deaths count
td<-subset(td, region != "united states")
td # total deaths dataset grouped by region w/o total United States death count
#import usa map data
states <- map_data("state")
states #usa map data
#Join states and td according to the "region" column
tdpoly <- inner_join(states, td, by = "region")
tdpoly
#make usa ggplot map
usa <- ggplot(data = states, mapping = aes(x = long, y = lat, group = group)) +
coord_fixed(1.3) +
geom_polygon(color = "black", fill = NA) #Fill is not mapped to anything (could be mapped to each states/regions eg: California and New York), and state lines are black (could be any other color)
usa
# get the state border back on top
# usa <- usa +
#   theme_nothing()  #remove axes and gray background
# usa
#Remove axes without removing legend
ditch_the_axes <- theme(
axis.text = element_blank(),
axis.line = element_blank(),
axis.ticks = element_blank(),
panel.border = element_blank(),
panel.grid = element_blank(),
axis.title = element_blank()
)
# With correct mercator projection
output <- usa +
geom_polygon(data = tdpoly, aes(fill = Deaths), color = "green") +
geom_polygon(color = "white", fill = NA) + #re-color state lines to white bcs fill for deaths per state/region is dark
ditch_the_axes
#output + scale_fill_gradient(trans = "log10")
output
maxd <- max(td$Deaths)
output2 <- output +
scale_fill_gradientn(colours = rev(rainbow(7)),
limits = c(min(td$Deaths), maxd),
#breaks = c(0, maxd*0.2, maxd*0.4, maxd*0.6, maxd*0.8, maxd) ,
)
output2
output3 <- output + scale_fill_gradient(limits = c(min(td$Deaths), maxd))
output3
#combine all region
td<-subset(datas, Cause.Name != "All causes")
td <- aggregate(x= td$Deaths, by=list(td$State),
FUN=sum)
colnames(td) = c("region", "Deaths")
td$region <- tolower(td$region)
#to remove united states deaths count
td<-subset(td, region != "united states")
td # total deaths dataset grouped by region w/o total United States death count
#import usa map data
states <- map_data("state")
states #usa map data
#Join states and td according to the "region" column
tdpoly <- inner_join(states, td, by = "region")
tdpoly
#make usa ggplot map
usa <- ggplot(data = states, mapping = aes(x = long, y = lat, group = group)) +
coord_fixed(1.3) +
geom_polygon(color = "black", fill = NA) #Fill is not mapped to anything (could be mapped to each states/regions eg: California and New York), and state lines are black (could be any other color)
usa
# get the state border back on top
# usa <- usa +
#   theme_nothing()  #remove axes and gray background
# usa
#Remove axes without removing legend
ditch_the_axes <- theme(
axis.text = element_blank(),
axis.line = element_blank(),
axis.ticks = element_blank(),
panel.border = element_blank(),
panel.grid = element_blank(),
axis.title = element_blank()
)
# With correct mercator projection
output <- usa +
geom_polygon(data = tdpoly, aes(fill = Deaths), color = "white") +
ditch_the_axes
#output + scale_fill_gradient(trans = "log10")
output
maxd <- max(td$Deaths)
output2 <- output +
scale_fill_gradientn(colours = rev(rainbow(7)),
limits = c(min(td$Deaths), maxd),
#breaks = c(0, maxd*0.2, maxd*0.4, maxd*0.6, maxd*0.8, maxd) ,
)
output2
output3 <- output + scale_fill_gradient(limits = c(min(td$Deaths), maxd))
output3
#combine all region
td<-subset(datas, Cause.Name != "All causes")
td <- aggregate(x= td$Deaths, by=list(td$State),
FUN=sum)
colnames(td) = c("region", "Deaths")
td$region <- tolower(td$region)
#to remove united states deaths count
td<-subset(td, region != "united states")
td # total deaths dataset grouped by region w/o total United States death count
#import usa map data
states <- map_data("state")
states #usa map data
#Join states and td according to the "region" column
tdpoly <- inner_join(states, td, by = "region")
tdpoly
#make usa ggplot map
usa <- ggplot(data = states, mapping = aes(x = long, y = lat, group = group)) +
coord_fixed(1.3) +
geom_polygon(color = "black", fill = NA) #Fill is not mapped to anything (could be mapped to each states/regions eg: California and New York), and state lines are black (could be any other color)
usa
# get the state border back on top
# usa <- usa +
#   theme_nothing()  #remove axes and gray background
# usa
#Remove axes without removing legend
ditch_the_axes <- theme(
axis.text = element_blank(),
axis.line = element_blank(),
axis.ticks = element_blank(),
panel.border = element_blank(),
panel.grid = element_blank(),
axis.title = element_blank()
)
# output <- usa +
#     geom_polygon(data = tdpoly, aes(fill = Deaths), color = "green") +
#     geom_polygon(color = "white", fill = NA) + #re-color state lines to white bcs fill for deaths per state/region is dark
#     ditch_the_axes
# With correct mercator projection
output <- usa +
geom_polygon(data = tdpoly, aes(fill = Deaths), color = "white") + #re-color state lines to white bcs fill for deaths per state/region is dark
ditch_the_axes
#no need to change scale because differences in deaths per state/region are obvious by color
#output + scale_fill_gradient(trans = "log10")
output
maxd <- max(td$Deaths)
output2 <- output +
scale_fill_gradientn(colours = rev(rainbow(7)),
limits = c(min(td$Deaths), maxd),
#breaks = c(0, maxd*0.2, maxd*0.4, maxd*0.6, maxd*0.8, maxd) ,
)
output2
output3 <- output + scale_fill_gradient(limits = c(min(td$Deaths), maxd))
output3
#combine all region
td<-subset(datas, Cause.Name != "All causes")
td <- aggregate(x= td$Deaths, by=list(td$State),
FUN=sum)
colnames(td) = c("region", "Deaths")
td$region <- tolower(td$region)
#to remove united states deaths count
td<-subset(td, region != "united states")
td # total deaths dataset grouped by region w/o total United States death count
#import usa map data
states <- map_data("state")
states #usa map data
#Join states and td according to the "region" column
tdpoly <- inner_join(states, td, by = "region")
tdpoly
#make usa ggplot map
usa <- ggplot(data = states, mapping = aes(x = long, y = lat, group = group)) +
coord_fixed(1.3) +
geom_polygon(color = "black", fill = NA) #Fill is not mapped to anything (could be mapped to each states/regions eg: California and New York), and state lines are black (could be any other color)
usa
# get the state border back on top
# usa <- usa +
#   theme_nothing()  #remove axes and gray background
# usa
#Remove axes without removing legend
ditch_the_axes <- theme(
axis.text = element_blank(),
axis.line = element_blank(),
axis.ticks = element_blank(),
panel.border = element_blank(),
panel.grid = element_blank(),
axis.title = element_blank()
)
# output <- usa +
#     geom_polygon(data = tdpoly, aes(fill = Deaths), color = "green") +
#     geom_polygon(color = "white", fill = NA) + #re-color state lines to white bcs fill for deaths per state/region is dark
#     ditch_the_axes
#Plot total deaths for each state/region
output <- usa +
geom_polygon(data = tdpoly, aes(fill = Deaths), color = "white") + #re-color state lines to white bcs fill for deaths per state/region is dark
ditch_the_axes
#no need to change scale because differences in deaths per state/region are obvious by color
#output + scale_fill_gradient(trans = "log10")
output
maxd <- max(td$Deaths)
#Use more colors
output2 <- output +
scale_fill_gradientn(colours = rev(rainbow(7)),
limits = c(min(td$Deaths), maxd),
#breaks = c(0, maxd*0.2, maxd*0.4, maxd*0.6, maxd*0.8, maxd) ,
)
output2
#
# output3 <- output + scale_fill_gradient(limits = c(min(td$Deaths), maxd))
# output3
